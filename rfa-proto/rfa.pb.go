// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.13.0
// source: rfa.proto

package rfa_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NullMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NullMsg) Reset() {
	*x = NullMsg{}
	mi := &file_rfa_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NullMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullMsg) ProtoMessage() {}

func (x *NullMsg) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullMsg.ProtoReflect.Descriptor instead.
func (*NullMsg) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{0}
}

type ResponseResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseResult) Reset() {
	*x = ResponseResult{}
	mi := &file_rfa_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseResult) ProtoMessage() {}

func (x *ResponseResult) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseResult.ProtoReflect.Descriptor instead.
func (*ResponseResult) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseResult) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ResponseResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DiskVS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiskVS        string                 `protobuf:"bytes,1,opt,name=DiskVS,proto3" json:"DiskVS,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskVS) Reset() {
	*x = DiskVS{}
	mi := &file_rfa_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskVS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskVS) ProtoMessage() {}

func (x *DiskVS) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskVS.ProtoReflect.Descriptor instead.
func (*DiskVS) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{2}
}

func (x *DiskVS) GetDiskVS() string {
	if x != nil {
		return x.DiskVS
	}
	return ""
}

type DataChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SizeInBytes   int32                  `protobuf:"varint,1,opt,name=SizeInBytes,proto3" json:"SizeInBytes,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	IsLastChunk   bool                   `protobuf:"varint,3,opt,name=IsLastChunk,proto3" json:"IsLastChunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataChunk) Reset() {
	*x = DataChunk{}
	mi := &file_rfa_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunk) ProtoMessage() {}

func (x *DataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunk.ProtoReflect.Descriptor instead.
func (*DataChunk) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{3}
}

func (x *DataChunk) GetSizeInBytes() int32 {
	if x != nil {
		return x.SizeInBytes
	}
	return 0
}

func (x *DataChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *DataChunk) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

type HandleResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Handled       int64                  `protobuf:"varint,1,opt,name=handled,proto3" json:"handled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleResult) Reset() {
	*x = HandleResult{}
	mi := &file_rfa_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleResult) ProtoMessage() {}

func (x *HandleResult) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleResult.ProtoReflect.Descriptor instead.
func (*HandleResult) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{4}
}

func (x *HandleResult) GetHandled() int64 {
	if x != nil {
		return x.Handled
	}
	return 0
}

type ExistsResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistsResult) Reset() {
	*x = ExistsResult{}
	mi := &file_rfa_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsResult) ProtoMessage() {}

func (x *ExistsResult) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsResult.ProtoReflect.Descriptor instead.
func (*ExistsResult) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{5}
}

func (x *ExistsResult) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type DataWriteRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VSID           string                 `protobuf:"bytes,1,opt,name=VSID,proto3" json:"VSID,omitempty"`
	LocationID     string                 `protobuf:"bytes,2,opt,name=LocationID,proto3" json:"LocationID,omitempty"`
	SizeTotalBytes int64                  `protobuf:"varint,3,opt,name=SizeTotalBytes,proto3" json:"SizeTotalBytes,omitempty"`
	Chunk          *DataChunk             `protobuf:"bytes,4,opt,name=Chunk,proto3" json:"Chunk,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DataWriteRequest) Reset() {
	*x = DataWriteRequest{}
	mi := &file_rfa_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataWriteRequest) ProtoMessage() {}

func (x *DataWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataWriteRequest.ProtoReflect.Descriptor instead.
func (*DataWriteRequest) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{6}
}

func (x *DataWriteRequest) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *DataWriteRequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *DataWriteRequest) GetSizeTotalBytes() int64 {
	if x != nil {
		return x.SizeTotalBytes
	}
	return 0
}

func (x *DataWriteRequest) GetChunk() *DataChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type DataDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VSID          string                 `protobuf:"bytes,1,opt,name=VSID,proto3" json:"VSID,omitempty"`
	LocationID    string                 `protobuf:"bytes,2,opt,name=LocationID,proto3" json:"LocationID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataDeleteRequest) Reset() {
	*x = DataDeleteRequest{}
	mi := &file_rfa_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataDeleteRequest) ProtoMessage() {}

func (x *DataDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataDeleteRequest.ProtoReflect.Descriptor instead.
func (*DataDeleteRequest) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{7}
}

func (x *DataDeleteRequest) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *DataDeleteRequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

type DataReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VSID          string                 `protobuf:"bytes,1,opt,name=VSID,proto3" json:"VSID,omitempty"`
	LocationID    string                 `protobuf:"bytes,2,opt,name=LocationID,proto3" json:"LocationID,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Length        int64                  `protobuf:"varint,4,opt,name=Length,proto3" json:"Length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataReadRequest) Reset() {
	*x = DataReadRequest{}
	mi := &file_rfa_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataReadRequest) ProtoMessage() {}

func (x *DataReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataReadRequest.ProtoReflect.Descriptor instead.
func (*DataReadRequest) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{8}
}

func (x *DataReadRequest) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *DataReadRequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *DataReadRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DataReadRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type DataExistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VSID          string                 `protobuf:"bytes,1,opt,name=VSID,proto3" json:"VSID,omitempty"`
	LocationID    string                 `protobuf:"bytes,2,opt,name=LocationID,proto3" json:"LocationID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataExistRequest) Reset() {
	*x = DataExistRequest{}
	mi := &file_rfa_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataExistRequest) ProtoMessage() {}

func (x *DataExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataExistRequest.ProtoReflect.Descriptor instead.
func (*DataExistRequest) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{9}
}

func (x *DataExistRequest) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *DataExistRequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

type SpaceInfos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceInfos    []*SpaceInfo           `protobuf:"bytes,1,rep,name=SpaceInfos,proto3" json:"SpaceInfos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceInfos) Reset() {
	*x = SpaceInfos{}
	mi := &file_rfa_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceInfos) ProtoMessage() {}

func (x *SpaceInfos) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceInfos.ProtoReflect.Descriptor instead.
func (*SpaceInfos) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{10}
}

func (x *SpaceInfos) GetSpaceInfos() []*SpaceInfo {
	if x != nil {
		return x.SpaceInfos
	}
	return nil
}

type SpaceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	All           uint64                 `protobuf:"varint,2,opt,name=All,proto3" json:"All,omitempty"`
	Used          uint64                 `protobuf:"varint,3,opt,name=Used,proto3" json:"Used,omitempty"`
	Free          uint64                 `protobuf:"varint,4,opt,name=Free,proto3" json:"Free,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceInfo) Reset() {
	*x = SpaceInfo{}
	mi := &file_rfa_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceInfo) ProtoMessage() {}

func (x *SpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rfa_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceInfo.ProtoReflect.Descriptor instead.
func (*SpaceInfo) Descriptor() ([]byte, []int) {
	return file_rfa_proto_rawDescGZIP(), []int{11}
}

func (x *SpaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceInfo) GetAll() uint64 {
	if x != nil {
		return x.All
	}
	return 0
}

func (x *SpaceInfo) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *SpaceInfo) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

var File_rfa_proto protoreflect.FileDescriptor

var file_rfa_proto_rawDesc = []byte{
	0x0a, 0x09, 0x72, 0x66, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67,
	0x22, 0x3e, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x20, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x6b, 0x56, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69,
	0x73, 0x6b, 0x56, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x73, 0x6b,
	0x56, 0x53, 0x22, 0x69, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x73, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x49, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x28, 0x0a,
	0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x22, 0x26, 0x0a, 0x0c, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22,
	0x99, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x56, 0x53, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x69, 0x7a, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x52, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x47, 0x0a, 0x11, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x56, 0x53, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x22, 0x75, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56, 0x53, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x46, 0x0a, 0x10, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56,
	0x53, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x0a, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x59, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x55, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x46, 0x72, 0x65,
	0x65, 0x32, 0xcf, 0x03, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x39, 0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67,
	0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08,
	0x52, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x09, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x28, 0x01, 0x12, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x72, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x1a,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x79,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x56, 0x53, 0x1a, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rfa_proto_rawDescOnce sync.Once
	file_rfa_proto_rawDescData = file_rfa_proto_rawDesc
)

func file_rfa_proto_rawDescGZIP() []byte {
	file_rfa_proto_rawDescOnce.Do(func() {
		file_rfa_proto_rawDescData = protoimpl.X.CompressGZIP(file_rfa_proto_rawDescData)
	})
	return file_rfa_proto_rawDescData
}

var file_rfa_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_rfa_proto_goTypes = []any{
	(*NullMsg)(nil),           // 0: protocol.NullMsg
	(*ResponseResult)(nil),    // 1: protocol.ResponseResult
	(*DiskVS)(nil),            // 2: protocol.DiskVS
	(*DataChunk)(nil),         // 3: protocol.DataChunk
	(*HandleResult)(nil),      // 4: protocol.HandleResult
	(*ExistsResult)(nil),      // 5: protocol.ExistsResult
	(*DataWriteRequest)(nil),  // 6: protocol.DataWriteRequest
	(*DataDeleteRequest)(nil), // 7: protocol.DataDeleteRequest
	(*DataReadRequest)(nil),   // 8: protocol.DataReadRequest
	(*DataExistRequest)(nil),  // 9: protocol.DataExistRequest
	(*SpaceInfos)(nil),        // 10: protocol.SpaceInfos
	(*SpaceInfo)(nil),         // 11: protocol.SpaceInfo
}
var file_rfa_proto_depIdxs = []int32{
	3,  // 0: protocol.DataWriteRequest.Chunk:type_name -> protocol.DataChunk
	11, // 1: protocol.SpaceInfos.SpaceInfos:type_name -> protocol.SpaceInfo
	0,  // 2: protocol.FileService.Shutdown:input_type -> protocol.NullMsg
	9,  // 3: protocol.FileService.Exists:input_type -> protocol.DataExistRequest
	8,  // 4: protocol.FileService.ReadData:input_type -> protocol.DataReadRequest
	7,  // 5: protocol.FileService.DeleteData:input_type -> protocol.DataDeleteRequest
	6,  // 6: protocol.FileService.WriteData:input_type -> protocol.DataWriteRequest
	0,  // 7: protocol.FileService.GetEntireSpaceInfo:input_type -> protocol.NullMsg
	2,  // 8: protocol.FileService.GetAnySpaceInfo:input_type -> protocol.DiskVS
	1,  // 9: protocol.FileService.Shutdown:output_type -> protocol.ResponseResult
	5,  // 10: protocol.FileService.Exists:output_type -> protocol.ExistsResult
	3,  // 11: protocol.FileService.ReadData:output_type -> protocol.DataChunk
	4,  // 12: protocol.FileService.DeleteData:output_type -> protocol.HandleResult
	4,  // 13: protocol.FileService.WriteData:output_type -> protocol.HandleResult
	11, // 14: protocol.FileService.GetEntireSpaceInfo:output_type -> protocol.SpaceInfo
	10, // 15: protocol.FileService.GetAnySpaceInfo:output_type -> protocol.SpaceInfos
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_rfa_proto_init() }
func file_rfa_proto_init() {
	if File_rfa_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rfa_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rfa_proto_goTypes,
		DependencyIndexes: file_rfa_proto_depIdxs,
		MessageInfos:      file_rfa_proto_msgTypes,
	}.Build()
	File_rfa_proto = out.File
	file_rfa_proto_rawDesc = nil
	file_rfa_proto_goTypes = nil
	file_rfa_proto_depIdxs = nil
}
